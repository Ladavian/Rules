# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅
proxy-providers:
  NCloud:
    url: ""
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    proxy: 直连 

  1元:
  #  url: ""
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    proxy: 直连      

proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# ========================
# 主要端口设置
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895

allow-lan: true
mode: rule
log-level: info

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-name: zashboard
# external-ui-url: https://gh-proxy.com/GitHub.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  #nameserver:
  #  - 223.5.5.5
  #fake-ip-filter:
  #  - +.lan
  #  - +.local
  #  - geosite:cn
# 牛逼   
    - +.66jc.top  
    - +.jueduibupao.top  
    
    - +.ynhtbank.com
    - +.qeayr.cn
    - +.saojc.xyz   
    - +.sssyun.xyz
    - +.dler.cloud
    - +.0tk8a3a1q4t94dler.com    
    - +.aerianas.top
    - +.gptacg.top

ipv6: false

# ========================
# TUN 模块
# ========================
tun:
  enable: true
  stack: gvisor
  device: utun
  endpoint-independent-nat: true
  auto-route: false
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true

# ========================
# 策略组定义（已修改）
# ========================

proxy-groups:
  # ========== 业务分流组（全部可自定义） ==========
  - name: AI
    type: select
    proxies:
      - 美国-自动
      - 所有-自动  # [可修改] 默认选项
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 其他-自动
      - 拒绝

  - name: Meta AI
    type: select
    proxies:
      - 美国-自动
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 其他-自动
      - 拒绝

  - name: Perplexity
    type: select
    proxies:
      - 美国-自动
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 其他-自动
      - 拒绝

  - name: Stream Media
    type: select
    proxies:
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: GitHub
    type: select
    proxies:
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Reddit
    type: select
    proxies:
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Nvidia
    type: select
    proxies:
      - 直连
      - 所有-自动  # [可修改]
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Apple
    type: select
    proxies:
      - 直连  # [可修改] 示例：Apple默认直连
      - 所有-自动
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Microsoft
    type: select
    proxies:
      - 直连
      - 所有-自动  # [可修改]
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Games
    type: select
    proxies:
      - 直连
      - 所有-自动  # [可修改]
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: Crypto
    type: select
    proxies:
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  #- name: Test
  #  type: select
  #  proxies:
  #    - 直连
  #    - 所有-自动  # [可修改]
  #    - 所有-手选
  #    - 香港-手选
  #    - 香港-自动
  #    - 台湾-自动
  #    - 日本-自动
  #    - 新加坡-自动
  #    - 美国-自动
  #    - 其他-自动
  #    - 拒绝

  - name: Block
    type: select
    proxies:
      - 直连
      - 拒绝  # [可修改] 通常默认拒绝
      - 所有-自动
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动

  - name: 国外
    type: select
    proxies:
      - 所有-自动  # [可修改]
      - 直连
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝

  - name: 国内
    type: select
    proxies:
      - 直连  # [可修改] 国内默认直连
      - 拒绝
      - 所有-自动
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动

  - name: 其他
    type: select
    proxies:
      - 直连
      - 所有-自动  # [可修改]
      - 所有-手选
      - 香港-手选
      - 香港-自动
      - 台湾-自动
      - 日本-自动
      - 新加坡-自动
      - 美国-自动
      - 其他-自动
      - 拒绝


  # 所有组
  - name: 所有-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "^((?!(直连|拒绝)).)*$"

  - name: 所有-手选
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝)).)*$"

  # 香港组
  - name: 香港-手选
    type: select
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇭🇰🇰|HongKong)).*$"
  
  - name: 香港-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇭🇰🇰|HongKong)).*$"
  
  - name: 台湾-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇹🇼🇼|🇨🇨🇳🇳|TaiWan|Taiwan)).*$"
  
  - name: 日本-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼埼玉|沪日|深日|🇯🇯🇵🇵|Japan)).*$"
  
  - name: 新加坡-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇸🇬🇬|Singapore)).*$"

  - name: 美国-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇺🇸🇸|United States)).*$"

  - name: 其他-自动
    type: url-test
    url: https://www.gstatic.com/generate_204
    interval: 180
    tolerance: 50
    include-all: true
    filter: "^((?!(直连|拒绝|广港|香港|HK|Hong Kong|🇭🇭🇰🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇹🇼🇼|🇨🇨🇳🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼埼玉|沪日|深日|🇯🇯🇵🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇸🇬🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇺🇸🇸|United States)).)*$"

# ========================
# 规则引擎（rules）
# ========================
rules:
  - RULE-SET,pt / Domain,国内
  #- RULE-SET,TEST / Domain,Test
  - RULE-SET,Block / Domain,Block  
  - RULE-SET,GitHub / Domain,GitHub    
  - RULE-SET,ChatGPT / Domain,AI
  - RULE-SET,Claude / Domain,AI
  - RULE-SET,Copilot / Domain,AI
  - RULE-SET,Gemini / Domain,AI
  - RULE-SET,Groq / Domain,AI
  - RULE-SET,Grok / Domain,AI
  - RULE-SET,Meta AI / Domain,Meta AI
  - RULE-SET,Perplexity / Domain,Perplexity
  - RULE-SET,Microsoft / Domain,Microsoft
  - RULE-SET,Apple / Domain,Apple
  - RULE-SET,Apple-CN / Domain,Apple  
  - RULE-SET,OKX / Domain,Crypto
  - RULE-SET,Bybit / Domain,Crypto
  - RULE-SET,Binance / Domain,Crypto
  - RULE-SET,TikTok / Domain,Stream Media
  - RULE-SET,Netflix / Domain,Stream Media
  - RULE-SET,Netflix / IP,Stream Media,no-resolve
  - RULE-SET,Disney / Domain,Stream Media
  - RULE-SET,Amazon / Domain,Stream Media
  - RULE-SET,HBO / Domain,Stream Media
  - RULE-SET,Crunchyroll / Domain,Stream Media
  - RULE-SET,Popcorn / Domain,Stream Media  
  - RULE-SET,Spotify / Domain,Stream Media
  - RULE-SET,Steam / Domain,Games
  - RULE-SET,Epic / Domain,Games
  - RULE-SET,EA / Domain,Games
  - RULE-SET,Blizzard / Domain,Games
  - RULE-SET,UBI / Domain,Games
  - RULE-SET,PlayStation / Domain,Games
  - RULE-SET,Nintend / Domain,Games
  - RULE-SET,Nvidia / Domain,Nvidia
  - RULE-SET,Reddit / Domain,Reddit  
  - RULE-SET,Proxy / Domain,国外
  - RULE-SET,Globe / Domain,国外  
  - RULE-SET,Direct / Domain,国内
  - RULE-SET,China / Domain,国内
  - RULE-SET,China / IP,国内,no-resolve
  - RULE-SET,Private / Domain,国内
  - MATCH,其他

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  pt / Domain: {<<: *class, url: "https://raw.githubusercontent.com/Ladavian/Rules/refs/heads/main/rules/clash-PT.yaml"}
  TEST / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
  ChatGPT / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Meta AI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  Perplexity / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  Copilot / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Copilot.list"}
  Gemini / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Gemini.list"}
  GitHub / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs"}
  Amazon / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/amazon.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"} 
  Microsoft / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs"}
  OKX / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/binance.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs"}
  Netflix / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"}
  HBO / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs"}
  Spotify / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs"}
  Steam / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs"}
  Epic / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list"}
  EA / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list"}
  Blizzard / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  UBI / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list"}
  PlayStation / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PlayStation/PlayStation.list"}
  Nintend / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list"}
  Proxy / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  Globe / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"} 
  Block / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Block.list"}
  Nvidia / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Nvidia/Nvidia.list"}
  Crunchyroll / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Crunchyroll.list"}
  Reddit / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/reddit.mrs"}
  Groq / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/groq.mrs"}
  Grok / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Grok.list"}
  Popcorn / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Popcorn.list"}
  Direct / Domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Direct.list"}
  Private / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"}
  China / Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs"}
  China / IP: {<<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs"}